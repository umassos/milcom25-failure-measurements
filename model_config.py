import torchvision.models as models

model_config = {
    "efficientnet_b0": ("efficientnet", "efficientnet_b0", models.EfficientNet_B0_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "efficientnet_b1": ("efficientnet", "efficientnet_b1", models.EfficientNet_B1_Weights.IMAGENET1K_V1, (1, 3, 240, 240)),
    "efficientnet_b2": ("efficientnet", "efficientnet_b2", models.EfficientNet_B2_Weights.IMAGENET1K_V1, (1, 3, 260, 260)),
    "efficientnet_b3": ("efficientnet", "efficientnet_b3", models.EfficientNet_B3_Weights.IMAGENET1K_V1, (1, 3, 300, 300)),
    "efficientnet_b4": ("efficientnet", "efficientnet_b4", models.EfficientNet_B4_Weights.IMAGENET1K_V1, (1, 3, 380, 380)),
    "efficientnet_b5": ("efficientnet", "efficientnet_b5", models.EfficientNet_B5_Weights.IMAGENET1K_V1, (1, 3, 456, 456)),
    "efficientnet_b6": ("efficientnet", "efficientnet_b6", models.EfficientNet_B6_Weights.IMAGENET1K_V1, (1, 3, 528, 528)),
    "efficientnet_b7": ("efficientnet", "efficientnet_b7", models.EfficientNet_B7_Weights.IMAGENET1K_V1, (1, 3, 600, 600)),
    "efficientnet_v2_s": ("efficientnet", "efficientnet_v2_s", models.EfficientNet_V2_S_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "efficientnet_v2_m": ("efficientnet", "efficientnet_v2_m", models.EfficientNet_V2_M_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "efficientnet_v2_l": ("efficientnet", "efficientnet_v2_l", models.EfficientNet_V2_L_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "shufflenet_v2_x0_5": ("shufflenet", "shufflenet_v2_x0_5", models.ShuffleNet_V2_X0_5_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "shufflenet_v2_x1_0": ("shufflenet", "shufflenet_v2_x1_0", models.ShuffleNet_V2_X1_0_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "shufflenet_v2_x1_5": ("shufflenet", "shufflenet_v2_x1_5", models.ShuffleNet_V2_X1_5_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "shufflenet_v2_x2_0": ("shufflenet", "shufflenet_v2_x2_0", models.ShuffleNet_V2_X2_0_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnet18": ("resnet", "resnet18", models.ResNet18_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnet34": ("resnet", "resnet34", models.ResNet34_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnet50": ("resnet", "resnet50", models.ResNet50_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnet101": ("resnet", "resnet101", models.ResNet101_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnet152": ("resnet", "resnet152", models.ResNet152_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "wide_resnet50_2": ("resnet", "wide_resnet50_2", models.Wide_ResNet50_2_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "wide_resnet101_2": ("resnet", "wide_resnet101_2", models.Wide_ResNet101_2_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "convnext_tiny": ("convnext", "convnext_tiny", models.ConvNeXt_Tiny_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "convnext_small": ("convnext", "convnext_small", models.ConvNeXt_Small_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "convnext_base": ("convnext", "convnext_base", models.ConvNeXt_Base_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "convnext_large": ("convnext", "convnext_large", models.ConvNeXt_Large_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "densenet121": ("densenet", "densenet121", models.DenseNet121_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "densenet161": ("densenet", "densenet161", models.DenseNet161_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "densenet169": ("densenet", "densenet169", models.DenseNet169_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "densenet201": ("densenet", "densenet201", models.DenseNet201_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "vit_b_16": ("vit", "vit_b_16", models.ViT_B_16_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "vit_b_32": ("vit", "vit_b_32", models.ViT_B_32_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "vit_l_16": ("vit", "vit_l_16", models.ViT_L_16_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "vit_l_32": ("vit", "vit_l_32", models.ViT_L_32_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "vit_h_14": ("vit", "vit_h_14", models.ViT_H_14_Weights.IMAGENET1K_SWAG_E2E_V1, (1, 3, 224, 224)),
    "mobilenet_v2": ("mobilenet", "mobilenet_v2", models.MobileNet_V2_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "mobilenet_v3_large": ("mobilenet", "mobilenet_v3_large", models.MobileNet_V3_Large_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "mobilenet_v3_small": ("mobilenet", "mobilenet_v3_small", models.MobileNet_V3_Small_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "mnasnet0_5": ("mnasnet", "mnasnet0_5", models.MNASNet0_5_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "mnasnet1_0": ("mnasnet", "mnasnet1_0", models.MNASNet1_0_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_1_6gf": ("regnet", "regnet_y_1_6gf", models.RegNet_Y_1_6GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_3_2gf": ("regnet", "regnet_y_3_2gf", models.RegNet_Y_3_2GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_400mf": ("regnet", "regnet_y_400mf", models.RegNet_Y_400MF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_800mf": ("regnet", "regnet_y_800mf", models.RegNet_Y_800MF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_8gf": ("regnet", "regnet_y_8gf", models.RegNet_Y_8GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_16gf": ("regnet", "regnet_y_16gf", models.RegNet_Y_16GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_32gf": ("regnet", "regnet_y_32gf", models.RegNet_Y_32GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_y_128gf": ("regnet", "regnet_y_128gf", models.RegNet_Y_128GF_Weights.IMAGENET1K_SWAG_E2E_V1, (1, 3, 224, 224)),
    "regnet_x_400mf": ("regnet_x", "regnet_x_400mf", models.RegNet_X_400MF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_x_800mf": ("regnet_x", "regnet_x_800mf", models.RegNet_X_800MF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_x_1_6gf": ("regnet_x", "regnet_x_1_6gf", models.RegNet_X_1_6GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_x_3_2gf": ("regnet_x", "regnet_x_3_2gf", models.RegNet_X_3_2GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_x_8gf": ("regnet_x", "regnet_x_8gf", models.RegNet_X_8GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_x_16gf": ("regnet_x", "regnet_x_16gf", models.RegNet_X_16GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "regnet_x_32gf": ("regnet_x", "regnet_x_32gf", models.RegNet_X_32GF_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnext50_32x4d": ("resnext", "resnext50_32x4d", models.ResNeXt50_32X4D_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnext101_32x8d": ("resnext", "resnext101_32x8d", models.ResNeXt101_32X8D_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
    "resnext101_64x4d": ("resnext", "resnext101_64x4d", models.ResNeXt101_64X4D_Weights.IMAGENET1K_V1, (1, 3, 224, 224)),
}


if __name__ == "__main__":
    ids = list(model_config.keys())
    with open("model_ids.txt", "w") as f:
        for id in ids:
            f.write(f"{id}\n")